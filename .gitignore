############################################################
# gitignore for golang                                     #
############################################################
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
server/*.exe
server/*.exe~
server/*.dll
server/*.so
server/*.dylib

# Test binary, built with `go test -c`
server/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
server/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
server/go.work

############################################################
# gitignore for node                                       #
############################################################

# Logs
web/logs
web/*.log
web/npm-debug.log*
web/yarn-debug.log*
web/yarn-error.log*
web/lerna-debug.log*
web/.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
web/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
web/pids
web/*.pid
web/*.seed
web/*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
web/lib-cov

# Coverage directory used by tools like istanbul
web/coverage
web/*.lcov

# nyc test coverage
web/.nyc_output

# node-waf configuration
web/.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
web/build/Release

# Dependency directories
web/node_modules/
web/jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web/web_modules/

# TypeScript cache
web/*.tsbuildinfo

# Optional npm cache directory
web/.npm

# Optional eslint cache
web/.eslintcache

# Optional stylelint cache
web/.stylelintcache

# Microbundle cache
web/.rpt2_cache/
web/.rts2_cache_cjs/
web/.rts2_cache_es/
web/.rts2_cache_umd/

# Optional REPL history
web/.node_repl_history

# Yarn Integrity file
web/.yarn-integrity

# dotenv environment variable files
web/.env
web/.env.development.local
web/.env.test.local
web/.env.production.local
web/.env.local

# parcel-bundler cache (https://parceljs.org/)
web/.cache
web/.parcel-cache

# Next.js build output
web/.next
web/out

# Gatsby files
web/.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# Docusaurus cache and generated files
web/.docusaurus

# Stores VSCode versions used for testing VSCode extensions
web/.vscode-test

# yarn v2
web/.yarn/cache
web/.yarn/unplugged
web/.yarn/build-state.yml
web/.yarn/install-state.gz
web/.pnp.*